/* This file is managed by Puppet. Any changes will be overridden. */
options {
        /* The working directory of the nameserver. */
        directory "<%= scope['::bind::config::working_directory'] %>";

        /* Where to dump the cache when issued 'rndc dumpdb'. */
        dump-file "<%= scope['::bind::config::dump_cache_file'] %>";

        /* Where to dump statistics when issued 'rndc stats'. */
        statistics-file "<%= scope['::bind::config::statistics_file'] %>";
        memstatistics-file "<%= scope['::bind::config::memstatistics_file'] %>";

        /* Explicitly set the ISC DLV key file. */
        bindkeys-file "<%= scope['::bind::config::bind_keys_file'] %>";

        /* Where to store shared keys used in dynamic updates. */
        key-directory "<%= scope['::bind::config::keys_directory'] %>";

        /* Where to store the automatically maintained DNSSEC security roots. */
        managed-keys-directory "<%= scope['::bind::config::working_directory'] %>";

        /* Don't give away any compromising information. */
        version none;
        hostname none;
        server-id none;

        /* Conform to RFC1035. */
        auth-nxdomain no;

        /* Make zone transfers more efficient by aggregating records. */
        transfer-format many-answers;

        /* Don't allow zone transfers that take longer than 5 minutes. */
        max-transfer-time-in 5;

        /* Allow slave notifications from this server; used for zone transfers. */
        notify <%= scope['::bind::use_notify'] %>;

        /* Allow recursion on this server; used for caching nameservers. */
        recursion <%= scope['::bind::use_recursion'] %>;

        /* Explicitly enable/disable DNSSEC, including validation and lookaside. *.
        dnssec-enable <%= scope['::bind::dnssec_enable'] %>;
        dnssec-validation <%= scope['::bind::dnssec_validation'] %>;
        dnssec-lookaside <%= scope['::bind::dnssec_lookaside'] %>;

    <%- if scope['::bind::check_names_master'] != 'none' -%>
        check-names master <%= scope['::bind::check_names_master'] %>;
    <%- end -%>
    <%- if scope['::bind::check_names_slave'] != 'none' -%>
        check-names slave <%= scope['::bind::check_names_slave'] %>;
    <%- end -%>
    <%- if scope['::bind::check_names_response'] != 'none' -%>
        check-names response <%= scope['::bind::check_names_response'] %>;
    <%- end -%>

        /* IPv4/IPv6 addresses listen on. */
        listen-on port 53 { <%= scope.function_coalesce_array([ scope['::bind::listen_ipv4'], '127.0.0.1' ]) %> };
        listen-on-v6 port 53 { <%= scope.function_coalesce_array([ scope['::bind::listen_ipv6'], '::1' ]) %> };

    <%- if not scope['::bind::avoid_v4_udp_ports'].empty? -%>
        /* Avoid using the following UDP ports for IPv4; used to get around firewalls. */
        avoid-v4-udp-ports { <%= scope.function_coalesce_array([ scope['::bind::avoid_v4_udp_ports'] ]) %> };
    <%- end -%>
    <%- if not scope['::bind::avoid_v6_udp_ports'].empty? -%>
        /* Avoid using the following UDP ports for IPv6; used to get around firewalls. */
        avoid-v6-udp-ports { <%= scope.function_coalesce_array([ scope['::bind::avoid_v6_udp_ports'] ]) %> };
    <%- end -%>

    <%- if not scope['::bind::forwarders'].empty? -%>
        /* Global forwarding policy and global forwarders. */
        forward <%= scope['::bind::forward_policy'] %>;
        forwarders { <%= scope.function_coalesce_array([ scope['::bind::forwarders'] ]) %> };
    <%- end -%>

        /* Allow the following addresses/keys to update our DNS records. */
        allow-update { <%= scope.function_coalesce_array([ scope['::bind::allow_update'], 'none' ]) %> };

    <%- if not scope['::bind::allow_update_forwarding'].empty? -%>
        /* Allow the following addresses/keys to submit dynamic updates to a slave for forwarding to a master. */
        allow-update-forwarding { <%= scope.function_coalesce_array([ scope['::bind::allow_update_forwarding'], 'none' ]) %> };
    <%- end -%>

        /* Allow zone transfers to servers matching these address or using these keys. */
        allow-transfer { <%= scope.function_coalesce_array([ scope['::bind::allow_transfer'], 'none' ]) %> };

        /* Allow the following addresses to send us NOTIFY messages. */
        allow-notify { <%= scope.function_coalesce_array([ scope['::bind::allow_notify'], 'none' ]) %> };

        /* Allow the following addresses to use this server as a recursor. */
        allow-recursion { <%= scope.function_coalesce_array([ scope['::bind::allow_recursion'], 'none' ]) %> };

        /* Allow the following addresses to use this server for queries. */
        allow-query { <%= scope.function_coalesce_array([ scope['::bind::allow_query'], 'none' ]) %> };

        /* Allow the following address to use the server's cached results. */
        allow-query-cache { <%= scope.function_coalesce_array([ scope['::bind::allow_query_cache'], 'none' ]) %> };
};
